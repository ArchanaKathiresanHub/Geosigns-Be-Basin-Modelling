#!/bin/csh -f

set platform=""
set project=""
set procs=""
set subdir="."
set debug="false"

while ($#argv > 0)
   switch ($1)
      case -h*:
         echo "usage: fastchecktest -platform <OS-identifier>"
	 echo "                       -project <project-name>"
	 echo "                       -procs <# procs>"
	 echo "                       [-help]"
	 echo "                       [-subdir <subdir>]"
	 echo ""
	 echo "       OS-identifier: e.g. Linux64 or IRIX64"
	 echo "       project-name:  e.g. Acquifer"
	 echo "       # procs:       e.g. 1 or 2 or 4"
	 echo "       subdir:        e.g. HydrostaticTemperature or LooselyCoupled (for fastcauldron only)"
	 exit 0
      case -platform:
	 set platform=$2
	 shift
	 shift
	 breaksw
      case -project:
	 set project=$2
	 shift
	 shift
	 breaksw
      case -procs:
	 set procs=$2
	 shift
	 shift
	 breaksw
      case -subdir:
	 set subdir=$2
	 shift
	 shift
	 breaksw
      case -debug:
         set debug="true"
	 shift
	 breaksw
      case *:
         echo "${1}: illegal option"
	 exit -1
	 breaksw
   endsw
end

if ($platform == "") then
   echo "Error: platform  (e.g. IRIX64 or Linux64) to execute your test on is not specified, use -platform to specify"
   exit -1
endif

if ($project == "") then
   echo "Error: project to test is not specified, use -project to specify"
   exit -1
endif

if ($procs == "") then
   echo "Error: number of processors to execute your test on is not specified, use -procs to specify"
   exit -1
endif

set subdir = "${subdir}/"
endif

if ($debug == "true") then
   echo "variables:"
   echo "   platform = $platform"
   echo "   project = $project"
   echo "   procs = $procs"
   echo "   subdir = $subdir"
endif

set startdir = `pwd`

if (-d $project) then
   cd $project
else
   echo "Error: directory $project does not exist"
   exit -1;
endif

set curdir = `pwd`

cd $subdir$platform/$procs

#check whether it is a 1d or 3d project (be careful: 3d projects might have 1d related projects in the same directory)
set extension=""
if (-f Valid/${project}.project3d) then
   set extension="project3d"
else
   set extension="project1d" 
endif

set finalstatus = 0

if ( ${extension} == "project3d") then
   set inputdir = "$curdir/Input/${project}_CauldronOutputDir"
   set validdir = "Valid/${project}_CauldronOutputDir"
   set testdir = "Test/${project}_CauldronOutputDir"

   mkdir -p $inputdir
   /bin/ls $inputdir > InputFiles
   /bin/ls $validdir > ValidFiles
   /bin/ls $testdir > TestFiles

   set validhdffiles = "`diff -e InputFiles ValidFiles | grep HDF`"
   set validhdffiles = "$validhdffiles `diff -e InputFiles ValidFiles | grep .h5`"

   set testhdffiles = "`diff -e InputFiles TestFiles | grep HDF`"
   set testhdffiles = "$testhdffiles `diff -e InputFiles TestFiles | grep .h5`"

# check for superfluous output files
   foreach file ($testhdffiles)
      if (! -f $validdir/$file) then
	 echo "- Additional output file: $validdir/$file"
	 set finalstatus = 1
      endif
   end

   set exceptions = "ResRockFlow ResRockFlux"

   set difffiles = ""
   /bin/rm -f diffs
   foreach file ($validhdffiles)
      if (! -f $testdir/$file) then
	 echo "- Missing output file: $testdir/$file"
	 set finalstatus = 1
      else
	 /bin/rm -f diffs.$file
	 h5diff  $validdir/$file $testdir/$file -r -p 0.01 > diffs.$file
	 h5diff  $validdir/$file $testdir/$file -p 0.01 > diffsin # used to detect if there are relevant diffs
	 grep -v differences diffsin > diffsout
	 mv diffsout diffsin
	 foreach exception ($exceptions)
	    grep -v "$exception" diffsin > diffsout
	    mv diffsout diffsin
	 end
	 grep Dataset diffsin > /dev/null
	 set grepstatus = $status
	 /bin/rm -f diffsin
	 # echo "grepstatus = $grepstatus"
	 if ($grepstatus == 0) then
	    set finalstatus = 1
	    set difffiles = "${difffiles} diffs.$file"
	 endif
      endif
   end
else
   #count lines of diff output of 1d project file
   set number_of_diff_lines=`diff Valid/${project}_out.project1d Test/${project}_out.project1d| wc -l` 
   #four lines of diff output relate to different dates
   #echo "Number of relevant diff output lines: ${number_of_diff_lines}"
   if (${number_of_diff_lines} == 4) then
      set finalstatus = 0
   else
      set finalstatus = 1
   endif
endif

# echo "finalstatus = $finalstatus"

if ($finalstatus != 0) then
   echo "- A number of significant differences were found for ${startdir:t} in project ${project} on platform $platform with $procs processors"
   if (${extension} == "project3d") then
      echo "    A complete overview of the offending differences can be found in the files:"
      foreach difffile ($difffiles)
         echo "        $difffile"
      end
   endif
   echo "    in directory:"
   echo "        `pwd`"
else
   echo "- No significant differences were found for ${startdir:t} in project ${project} on platform $platform with $procs processors"
   echo "    A complete overview of the differences can be found in directory:"
   echo "    `pwd`"
endif

exit $finalstatus

