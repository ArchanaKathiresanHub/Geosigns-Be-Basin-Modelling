# 
#
#
FILE_BASE = ../../../files
include $(FILE_BASE)/Make.targets

CURDIR = $(cwd)
ROOTDIR = ..
SRCDIR  = ${ROOTDIR}/src/
TESTOBJECTS = testMain.o testschema.o

LIBOBJECTS = dataschema.o database.o datautils.o
CAULDRONLIBOBJECTS = cauldronschema.o cauldronschemafuncs.o

LIBSRCS = $(LIBOBJECTS:.o=.C)
CAULDRONLIBSRCS = $(CAULDRONLIBOBJECTS:.o=.C)

LIBINCLUDES = dataschema.h database.h datatype.h datautils.h
CAULDRONLIBINCLUDES = cauldronschema.h cauldronschemafuncs.h

#
# parspec is created in the tmp.Linux64 directory so that does not
# conflict with object files built for libraries.
#
PARSPECDIR	= ../parspec.$(machine)
PARSPECOBJECTS = parspec.o datautils.o
PARSPEC = parspec
PARSPECEXE= $(PARSPECDIR)/$(PARSPEC)

SHAREDLIB = libdatabase.so
LIB = libdatabase.a

SPECFILE = ../BasinModellerProperty.Spec
CAULDRONSCHEMA = CauldronSchema
CAULDRONSCHEMATARGET = ../src/$(CAULDRONSCHEMA)
CAULDRONLIB = CauldronLib

#CFLAGS=-I../../stl

SELECTEDLIB = $(SHAREDLIB)
SELECTEDLIB = $(LIB)

vpath %.h ${SRCDIR}
vpath %.C ${SRCDIR}

OBJDIR		= .
vpath %.o ${OBJDIR}

#target: $(LIB) $(SHAREDLIB)
target: $(LIB)


$(CAULDRONSCHEMATARGET): $(SPECFILE)
	mkdir -p $(PARSPECDIR)
	cd $(PARSPECDIR) && ln -s ../Makefile.TableIO Makefile; $(MAKE) $(PARSPEC)
	$(PARSPECEXE) -input $(SPECFILE) -schema $(CAULDRONSCHEMA) -directory $(SRCDIR)
	touch $(CAULDRONSCHEMATARGET)

$(PARSPEC) : $(PARSPECOBJECTS) Makefile 
	$(PURIFY) $(LCC) $(CFLAGS) $(PARSPECOBJECTS) -o $(PARSPEC)

$(CAULDRONLIB): $(CAULDRONSCHEMATARGET)
	$(MAKE) $(CAULDRONLIBOBJECTS)
	touch $(CAULDRONLIB)

$(LIB): $(LIBOBJECTS) $(CAULDRONLIB) $(CAULDRONLIBOBJECTS)
	$(AR) $(LIB) $(LIBOBJECTS) $(CAULDRONLIBOBJECTS)

$(CAULDRONLIBOBJECTS): $(CAULDRONSCHEMATARGET)

$(SHAREDLIB): $(LIB)
	$(SLAR) $(SHAREDLIB) $(LIBOBJECTS) $(CAULDRONLIBOBJECTS)

clean:
	rm -rf $(LIB) $(SHAREDLIB) $(TESTOBJECTS) $(LIBOBJECTS) $(CAULDRONLIBOBJECTS) \
	$(PARSPEC) $(CAULDRONSCHEMATARGET) $(CAULDRONLIB) \
	core test test.out snap.* ii_files SunWS_cache
	rm -rf $(PARSPECDIR)
	cd ../src && rm -f $(CAULDRONLIBSRCS) $(CAULDRONLIBINCLUDES)

DATE = `date +'%y%m%d_%H%M%S'`

release:
	cd ../src && $(TAR) cvhf ../releases/$(DATE).tar *.C *.h Makefile Make.*

doc:
	cd ../src && $(DOXYGEN) TableIO.dox

depend: $(LIBOBJECTS:.o=.C)
	cd ../src && $(MAKEDEPEND) -f../Makefile.TableIO -Y $(LIBOBJECTS:.o=.C) 2> /dev/null

# DO NOT DELETE

dataschema.o: datautils.h database.h dataschema.h datatype.h
database.o: database.h dataschema.h datatype.h datautils.h
datautils.o: datautils.h
