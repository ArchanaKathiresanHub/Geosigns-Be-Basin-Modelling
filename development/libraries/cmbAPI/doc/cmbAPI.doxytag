<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>cmbAPI.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>cmbAPI_8h</filename>
    <includes id="ErrorHandler_8h" name="ErrorHandler.h" local="yes" imported="no">ErrorHandler.h</includes>
    <includes id="LithologyManager_8h" name="LithologyManager.h" local="yes" imported="no">LithologyManager.h</includes>
    <includes id="PropertyManager_8h" name="PropertyManager.h" local="yes" imported="no">PropertyManager.h</includes>
    <includes id="SnapshotManager_8h" name="SnapshotManager.h" local="yes" imported="no">SnapshotManager.h</includes>
    <includes id="SourceRockManager_8h" name="SourceRockManager.h" local="yes" imported="no">SourceRockManager.h</includes>
    <includes id="StratigraphyManager_8h" name="StratigraphyManager.h" local="yes" imported="no">StratigraphyManager.h</includes>
    <includes id="FluidManager_8h" name="FluidManager.h" local="yes" imported="no">FluidManager.h</includes>
    <includes id="MapsManager_8h" name="MapsManager.h" local="yes" imported="no">MapsManager.h</includes>
    <includes id="UndefinedValues_8h" name="UndefinedValues.h" local="yes" imported="no">UndefinedValues.h</includes>
    <class kind="class">mbapi::Model</class>
    <namespace>mbapi</namespace>
  </compound>
  <compound kind="file">
    <name>ErrorHandler.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>ErrorHandler_8h</filename>
    <class kind="class">ErrorHandler</class>
  </compound>
  <compound kind="file">
    <name>FluidManager.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>FluidManager_8h</filename>
    <includes id="ErrorHandler_8h" name="ErrorHandler.h" local="yes" imported="no">ErrorHandler.h</includes>
    <class kind="class">mbapi::FluidManager</class>
    <namespace>mbapi</namespace>
  </compound>
  <compound kind="file">
    <name>LithologyManager.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>LithologyManager_8h</filename>
    <includes id="ErrorHandler_8h" name="ErrorHandler.h" local="yes" imported="no">ErrorHandler.h</includes>
    <class kind="class">mbapi::LithologyManager</class>
    <namespace>mbapi</namespace>
  </compound>
  <compound kind="file">
    <name>MapsManager.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>MapsManager_8h</filename>
    <includes id="ErrorHandler_8h" name="ErrorHandler.h" local="yes" imported="no">ErrorHandler.h</includes>
    <class kind="class">mbapi::MapsManager</class>
    <namespace>mbapi</namespace>
  </compound>
  <compound kind="file">
    <name>PropertyManager.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>PropertyManager_8h</filename>
    <includes id="ErrorHandler_8h" name="ErrorHandler.h" local="yes" imported="no">ErrorHandler.h</includes>
    <class kind="class">mbapi::PropertyManager</class>
    <namespace>mbapi</namespace>
  </compound>
  <compound kind="file">
    <name>SnapshotManager.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>SnapshotManager_8h</filename>
    <includes id="ErrorHandler_8h" name="ErrorHandler.h" local="yes" imported="no">ErrorHandler.h</includes>
    <class kind="class">mbapi::SnapshotManager</class>
    <namespace>mbapi</namespace>
  </compound>
  <compound kind="file">
    <name>SourceRockManager.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>SourceRockManager_8h</filename>
    <includes id="ErrorHandler_8h" name="ErrorHandler.h" local="yes" imported="no">ErrorHandler.h</includes>
    <class kind="class">mbapi::SourceRockManager</class>
    <namespace>mbapi</namespace>
  </compound>
  <compound kind="file">
    <name>StratigraphyManager.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>StratigraphyManager_8h</filename>
    <includes id="ErrorHandler_8h" name="ErrorHandler.h" local="yes" imported="no">ErrorHandler.h</includes>
    <class kind="class">mbapi::StratigraphyManager</class>
    <namespace>mbapi</namespace>
  </compound>
  <compound kind="file">
    <name>UndefinedValues.h</name>
    <path>D:/cauldron/trunk/development/libraries/cmbAPI/src/</path>
    <filename>UndefinedValues_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>UndefinedDoubleValue</name>
      <anchorfile>UndefinedValues_8h.html</anchorfile>
      <anchor>a41facb4b389b7f7ebaba6af891428dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UndefinedIntegerValue</name>
      <anchorfile>UndefinedValues_8h.html</anchorfile>
      <anchor>a4820a5ff20f84b367280947280c73496</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UndefinedIDValue</name>
      <anchorfile>UndefinedValues_8h.html</anchorfile>
      <anchor>ac6f01950fd7e1f78ac8c7d16b22292ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UndefinedStringValue</name>
      <anchorfile>UndefinedValues_8h.html</anchorfile>
      <anchor>ab003bd42d0231b1723316bcfaf963957</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValueUndefined</name>
      <anchorfile>UndefinedValues_8h.html</anchorfile>
      <anchor>a40d01b014f055509690e93b78e22a30e</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValueUndefined</name>
      <anchorfile>UndefinedValues_8h.html</anchorfile>
      <anchor>a08d6b9314531cd76b2bfd7c9ec1f6fa6</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValueUndefined</name>
      <anchorfile>UndefinedValues_8h.html</anchorfile>
      <anchor>aaa395ba94b155124beac5549c1a69e23</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValueUndefined</name>
      <anchorfile>UndefinedValues_8h.html</anchorfile>
      <anchor>a606269f806b7e218c3aca80f84eb9ab7</anchor>
      <arglist>(size_t val)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>ErrorHandlerPage</name>
    <title>Error handling in CMB and CASA APIs</title>
    <filename>ErrorHandlerPage</filename>
  </compound>
  <compound kind="page">
    <name>CMB_API_Descr</name>
    <title>Cauldron Model Building API</title>
    <filename>CMB_API_Descr</filename>
  </compound>
  <compound kind="page">
    <name>ClassHierachyPage</name>
    <title>Cauldron Model hierarchy description.</title>
    <filename>ClassHierachyPage</filename>
  </compound>
  <compound kind="page">
    <name>FluidManagerPage</name>
    <title>Fluid Manager</title>
    <filename>FluidManagerPage</filename>
  </compound>
  <compound kind="page">
    <name>LithologyManagerPage</name>
    <title>Lithology Manager</title>
    <filename>LithologyManagerPage</filename>
    <docanchor file="LithologyManagerPage" title="Porosity models">PorosityModelsSec</docanchor>
    <docanchor file="LithologyManagerPage" title="Exponential porosity model">ExpPorosityModelSubSec</docanchor>
    <docanchor file="LithologyManagerPage" title="Soil mechanics porosity model">SoilMechPorosityModelSubSec</docanchor>
    <docanchor file="LithologyManagerPage" title="Double-Exponential porosity model">DoubleExpPorosityModelSubSec</docanchor>
    <docanchor file="LithologyManagerPage" title="Permeability models">PermModelsSpec</docanchor>
    <docanchor file="LithologyManagerPage" title="None model means tiny constant permeability">NonePermModelSubSec</docanchor>
    <docanchor file="LithologyManagerPage" title="Permeability for sandstone">SandPermModelSubSec</docanchor>
    <docanchor file="LithologyManagerPage" title="Permeability for mudstone">MudPermModelSubSec</docanchor>
  </compound>
  <compound kind="page">
    <name>MapsManagerPage</name>
    <title>Maps Manager</title>
    <filename>MapsManagerPage</filename>
  </compound>
  <compound kind="page">
    <name>SourceRockManagerPage</name>
    <title>Source Rock Manager</title>
    <filename>SourceRockManagerPage</filename>
  </compound>
  <compound kind="page">
    <name>StratigraphyManagerPage</name>
    <title>Stratigraphy Manager</title>
    <filename>StratigraphyManagerPage</filename>
  </compound>
  <compound kind="class">
    <name>ErrorHandler</name>
    <filename>classErrorHandler.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ReturnCode</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NoError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462a76e479d65f9bb4578840e8c5f441447f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IoError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462ad8143059ef098014bf62a13a71204aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MemAllocError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462af71f0c410af863d389dc85e8669287da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NonexistingID</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462af821d2e4b3a3a55d92033597ec64fe80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UndefinedValue</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462a974c2b8690b5d259f37cb6e9231c8d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>OutOfRangeValue</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462a8e9942c5bc4bf1f90900c5d48b2c473a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NotImplementedAPI</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462accaaf5278e4f5562a2baa371fefc55d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AlreadyDefined</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462ad1b148d4c3e188fdcb92350e03531643</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MutationError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462a52834351f4120be495e01a78e105c099</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ValidationError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462aa86d8bf0a108a3b2f7731e28a55ceb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MonteCarloSolverError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462af4f54ca064c04ef8f60afab96c054ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RSProxyError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462af152e0410223128d58e06e7d2c08dda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SUMLibException</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462a3579fffd51a4610a49b0a0179e3c88ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LSFLibError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462a3c56c7c56b2a9aeae5f55a0d6f3839f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WrongPath</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462a1fd17132d5dae1521485a24d566e5350</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SerializationError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462a26304ae699cf214ebdb44451d39762e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DeserializationError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462a2b65ab987920017d5824734c1f3258c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UnknownError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>acadba1da388468d5c383dbdbcfcee462aa508cd0573517dc586f06dae09e1c4c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ReturnCode</type>
      <name>reportError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>ace617082a5004c941f232295c5ed318b</anchor>
      <arglist>(ReturnCode rc, const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>aee2f31377fe29bdbd73139e0a414a6ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReturnCode</type>
      <name>moveError</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>a592eee170030fac52f391c77903c84a3</anchor>
      <arglist>(ErrorHandler &amp;otherErrHandler)</arglist>
    </member>
    <member kind="function">
      <type>ReturnCode</type>
      <name>errorCode</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>a06970d3d48a7ad48d58da43ad33ee4d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~ErrorHandler</name>
      <anchorfile>classErrorHandler.html</anchorfile>
      <anchor>a73c7e690b864697e507aaeb537b3c3e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>mbapi</name>
    <filename>namespacembapi.html</filename>
    <class kind="class">mbapi::FluidManager</class>
    <class kind="class">mbapi::LithologyManager</class>
    <class kind="class">mbapi::MapsManager</class>
    <class kind="class">mbapi::Model</class>
    <class kind="class">mbapi::PropertyManager</class>
    <class kind="class">mbapi::SnapshotManager</class>
    <class kind="class">mbapi::SourceRockManager</class>
    <class kind="class">mbapi::StratigraphyManager</class>
  </compound>
  <compound kind="class">
    <name>mbapi::FluidManager</name>
    <filename>classmbapi_1_1FluidManager.html</filename>
    <base>ErrorHandler</base>
    <member kind="function" protection="protected">
      <type></type>
      <name>FluidManager</name>
      <anchorfile>classmbapi_1_1FluidManager.html</anchorfile>
      <anchor>af3f88f7e60b8f79eacb9df4c035d8b24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~FluidManager</name>
      <anchorfile>classmbapi_1_1FluidManager.html</anchorfile>
      <anchor>a8f7c1ee1b534ec46751e216c40f3770f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>FluidID</name>
      <anchorfile>classmbapi_1_1FluidManager.html</anchorfile>
      <anchor>a407ebbbb5b63ca5a8789e6f446c5d3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; FluidID &gt;</type>
      <name>getFluidsID</name>
      <anchorfile>classmbapi_1_1FluidManager.html</anchorfile>
      <anchor>ab31fe534068f13b21033278ce01b9f0d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FluidID</type>
      <name>createNewFluid</name>
      <anchorfile>classmbapi_1_1FluidManager.html</anchorfile>
      <anchor>a208f23753ccf9b7c936a3e2e5ce2c085</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>getFluidName</name>
      <anchorfile>classmbapi_1_1FluidManager.html</anchorfile>
      <anchor>adae63423a2a15f4d1c82d395534628ec</anchor>
      <arglist>(FluidID id, std::string &amp;fluidName) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mbapi::LithologyManager</name>
    <filename>classmbapi_1_1LithologyManager.html</filename>
    <base>ErrorHandler</base>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>permeabilityModel</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a4ffe87e6674c438a85dcdbaa24b00c25</anchor>
      <arglist>(LithologyID id, PermeabilityModel &amp;prmModel, std::vector&lt; double &gt; &amp;modelPrms, std::vector&lt; double &gt; &amp;mpPor, std::vector&lt; double &gt; &amp;mpPerm)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setPermeabilityModel</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>ae06543991706b50048fd0dba809f5517</anchor>
      <arglist>(LithologyID id, PermeabilityModel prmModel, const std::vector&lt; double &gt; &amp;modelPrms, const std::vector&lt; double &gt; &amp;mpPor, const std::vector&lt; double &gt; &amp;mpPerm)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>stpThermalConductivityCoeff</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a8b6609940c60e4b2a04fa4553edbfc55</anchor>
      <arglist>(LithologyID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setSTPThermalConductivityCoeff</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a00c6e62c15d3198ada668e10e4fe254f</anchor>
      <arglist>(LithologyID id, double stpThermCond)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~LithologyManager</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a82c1a7759a01ca2d43630ac537a7595f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PorosityModel</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a08cb1061f6837c519aac4693059d2e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PorExponential</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a08cb1061f6837c519aac4693059d2e52a6136ef8a9cf81f8a7d7b3f3927b598e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PorSoilMechanics</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a08cb1061f6837c519aac4693059d2e52a877a14dedc0be3867260fc50edf1c940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PorDoubleExponential</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a08cb1061f6837c519aac4693059d2e52a234b24e80c3f61b37e8d84f36ffca632</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PorUnknown</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a08cb1061f6837c519aac4693059d2e52a9b69869589d397a08d02dba0bb30e9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PermeabilityModel</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a60a733ce7e8dc40d3c34a148b20009a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PermSandstone</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a60a733ce7e8dc40d3c34a148b20009a7ad3e0bcc19fdcc2f3e03f794c2e81db6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PermMudstone</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a60a733ce7e8dc40d3c34a148b20009a7a8e9d552709ff2027e747509b12136903</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PermNone</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a60a733ce7e8dc40d3c34a148b20009a7aa719cc0bc6ee613e829bea534904628a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PermImpermeable</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a60a733ce7e8dc40d3c34a148b20009a7a99f0ba9769e0c8ec515ad76ad1af1a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PermMultipoint</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a60a733ce7e8dc40d3c34a148b20009a7afdaf8e1a78818b355d55a08597c63f58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PermUnknown</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a60a733ce7e8dc40d3c34a148b20009a7a8d81c57c9880b040907e0238eaed9539</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>LithologyID</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>aa7c83dc5fd423ff9253b465f9e3cd738</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; LithologyID &gt;</type>
      <name>lithologiesIDs</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a311c4542ad93b99beaf9b26205493d44</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LithologyID</type>
      <name>createNewLithology</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a7125239c045953406af0c5df746110d1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>lithologyName</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>afb0d100c1b64f3b1c7b938f877593e7e</anchor>
      <arglist>(LithologyID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LithologyID</type>
      <name>findID</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a880822d08e356235c9008662c8a4d73f</anchor>
      <arglist>(const std::string &amp;lName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LithologyID</type>
      <name>copyLithology</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a2950a1af483ae7163b611d0b52be677f</anchor>
      <arglist>(LithologyID id, const std::string &amp;newLithoName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>porosityModel</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a40be5cc31c1b6bb35097d3b8a4ca120b</anchor>
      <arglist>(LithologyID id, PorosityModel &amp;porModel, std::vector&lt; double &gt; &amp;porModelPrms)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setPorosityModel</name>
      <anchorfile>classmbapi_1_1LithologyManager.html</anchorfile>
      <anchor>a178cf7cab18aa59e7ac5072e51b3d87c</anchor>
      <arglist>(LithologyID id, PorosityModel porModel, const std::vector&lt; double &gt; &amp;porModelPrms)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mbapi::MapsManager</name>
    <filename>classmbapi_1_1MapsManager.html</filename>
    <base>ErrorHandler</base>
    <member kind="typedef">
      <type>size_t</type>
      <name>MapID</name>
      <anchorfile>classmbapi_1_1MapsManager.html</anchorfile>
      <anchor>abe3175b395c73694560b55b5937cbd21</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; MapID &gt;</type>
      <name>mapsIDs</name>
      <anchorfile>classmbapi_1_1MapsManager.html</anchorfile>
      <anchor>a828c73f75d26647f49ce5a831c5f88fc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual MapID</type>
      <name>findID</name>
      <anchorfile>classmbapi_1_1MapsManager.html</anchorfile>
      <anchor>ad2185b8fb5a170bc00791f7a217e59b3</anchor>
      <arglist>(const std::string &amp;mName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual MapID</type>
      <name>copyMap</name>
      <anchorfile>classmbapi_1_1MapsManager.html</anchorfile>
      <anchor>a1a73cf526affd2b3b70959b141852b21</anchor>
      <arglist>(MapID id, const std::string &amp;newMapName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ErrorHandler::ReturnCode</type>
      <name>saveMapToHDF</name>
      <anchorfile>classmbapi_1_1MapsManager.html</anchorfile>
      <anchor>a0975d2314562894f689a61f8fe418cb2</anchor>
      <arglist>(MapID id, const std::string &amp;fileName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ErrorHandler::ReturnCode</type>
      <name>mapValuesRange</name>
      <anchorfile>classmbapi_1_1MapsManager.html</anchorfile>
      <anchor>aaa990ce2478adc953eb78c85c0b32adb</anchor>
      <arglist>(MapID id, double &amp;minV, double &amp;maxV)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ErrorHandler::ReturnCode</type>
      <name>scaleMap</name>
      <anchorfile>classmbapi_1_1MapsManager.html</anchorfile>
      <anchor>afec39c2b5ce52454053143086d5008f6</anchor>
      <arglist>(MapID id, double coeff)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MapsManager</name>
      <anchorfile>classmbapi_1_1MapsManager.html</anchorfile>
      <anchor>a37eae64b416a7c493466381d9e84b43a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~MapsManager</name>
      <anchorfile>classmbapi_1_1MapsManager.html</anchorfile>
      <anchor>a392a277a7cc245e724dba778aa0e947e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mbapi::Model</name>
    <filename>classmbapi_1_1Model.html</filename>
    <base>ErrorHandler</base>
    <member kind="enumeration">
      <type></type>
      <name>ProjectTableColumnDataType</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a7a5b549286d48303fd40115064a087e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Bool</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a7a5b549286d48303fd40115064a087e8a4def3e0e73ba5a12e557106059b6b37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Int</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a7a5b549286d48303fd40115064a087e8a816ee46011aaaedef4b3fd853ea52fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Long</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a7a5b549286d48303fd40115064a087e8a343a8865c7ea93cb1d420e64ff6b82f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Float</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a7a5b549286d48303fd40115064a087e8a9c1742f9f18bf3f7111967fd3760c6e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Double</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a7a5b549286d48303fd40115064a087e8ae818507ab1b01095a232a8e81a8c68da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>String</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a7a5b549286d48303fd40115064a087e8a3bca3f8003eb4f92ab22e41570eac382</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Model</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>afcb6731981102f5177cc9de2b8c92f84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Model</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>adc1adf8fcebeefa658cf0aa1f6cb407c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>compareProject</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>ab195105149d6f9e12a8a50435bccd515</anchor>
      <arglist>(Model &amp;mdl1, const std::set&lt; std::string &gt; &amp;compareTblsList, const std::set&lt; std::string &gt; &amp;ignoreTblsList, double relTol)</arglist>
    </member>
    <member kind="function">
      <type>Model &amp;</type>
      <name>operator=</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a7afc9b40340967e4d03724ce98f02de9</anchor>
      <arglist>(const Model &amp;otherModel)</arglist>
    </member>
    <member kind="function">
      <type>ErrorHandler::ReturnCode</type>
      <name>tableSort</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a9888ebb6f5146eb5e61faa87d36a9e54</anchor>
      <arglist>(const std::string &amp;tblName, const std::vector&lt; std::string &gt; &amp;colsName)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>tablesList</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>ae542e860b4334c9eb286323fcd90c1a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>tableColumnsList</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>aad56d43498f5900dad24ccb5ca673225</anchor>
      <arglist>(const std::string &amp;tableName, std::vector&lt; ProjectTableColumnDataType &gt; &amp;colDataTypes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tableSize</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>abfbcac1ce060100240c7f866623ae1ce</anchor>
      <arglist>(const std::string &amp;tableName)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>tableValueAsInteger</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>ae26a07b62306ed91296314afddf2a5ed</anchor>
      <arglist>(const std::string &amp;tableName, size_t rowNumber, const std::string &amp;propName)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>tableValueAsDouble</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a5f2f95770cc1f10b998df635ebe2cea6</anchor>
      <arglist>(const std::string &amp;tableName, size_t rowNumber, const std::string &amp;propName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>tableValueAsString</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a4f1c412e4cb1fafdb7fdfa7f1873ac26</anchor>
      <arglist>(const std::string &amp;tableName, size_t rowNumber, const std::string &amp;propName)</arglist>
    </member>
    <member kind="function">
      <type>ErrorHandler::ReturnCode</type>
      <name>setTableValue</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>abb3282fff42e86f1020e43fc5428bd2f</anchor>
      <arglist>(const std::string &amp;tableName, size_t rowNumber, const std::string &amp;propName, long propValue)</arglist>
    </member>
    <member kind="function">
      <type>ErrorHandler::ReturnCode</type>
      <name>setTableValue</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a22f296c6c078f49330595f8d7fffab9a</anchor>
      <arglist>(const std::string &amp;tableName, size_t rowNumber, const std::string &amp;propName, double propValue)</arglist>
    </member>
    <member kind="function">
      <type>ErrorHandler::ReturnCode</type>
      <name>setTableValue</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>ac46f778da1248f27d4c3fcd364a6f5ba</anchor>
      <arglist>(const std::string &amp;tableName, size_t rowNumber, const std::string &amp;propName, const std::string &amp;propValue)</arglist>
    </member>
    <member kind="function">
      <type>ErrorHandler::ReturnCode</type>
      <name>clearTable</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>aeee1f28764016d5dab8bdbdfd15024f7</anchor>
      <arglist>(const std::string &amp;tableName)</arglist>
    </member>
    <member kind="function">
      <type>ErrorHandler::ReturnCode</type>
      <name>addRowToTable</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>aaf9771356dc94cff7673c0c87408c729</anchor>
      <arglist>(const std::string &amp;tableName)</arglist>
    </member>
    <member kind="function">
      <type>ReturnCode</type>
      <name>loadModelFromProjectFile</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>af7e0371a14c1f46601a91940e2b47686</anchor>
      <arglist>(const char *projectFileName)</arglist>
    </member>
    <member kind="function">
      <type>ReturnCode</type>
      <name>saveModelToProjectFile</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a248aa16548ae2a96bfde997bdf4f5020</anchor>
      <arglist>(const char *projectFileName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>projectFileName</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a912fec559a672a5625a029eea2278a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StratigraphyManager &amp;</type>
      <name>stratigraphyManager</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>aef1d7eed9bb7ffc57c45aef11189b328</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LithologyManager &amp;</type>
      <name>lithologyManager</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a9b8e78c29f28ed7417276ade6daed53d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FluidManager &amp;</type>
      <name>fluidManager</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>aec526a95704d18f08a349524e189f6ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SourceRockManager &amp;</type>
      <name>sourceRockManager</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a79698cf186a078e74e6d809ad48fdd11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SnapshotManager &amp;</type>
      <name>snapshotManager</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>aeb77b55bf5ba0bb2eba709a92d366393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PropertyManager &amp;</type>
      <name>propertyManager</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a8bc2f524b4271bb406d057140efffed3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MapsManager &amp;</type>
      <name>mapsManager</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a084516d88abc0ee0955037e26a42902f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReturnCode</type>
      <name>origin</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a840578561e2be0c6e3e069f004061073</anchor>
      <arglist>(double &amp;x, double &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>ReturnCode</type>
      <name>arealSize</name>
      <anchorfile>classmbapi_1_1Model.html</anchorfile>
      <anchor>a65ce2138d1f29884606f4c1e5dd25afc</anchor>
      <arglist>(double &amp;dimX, double &amp;dimY)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mbapi::PropertyManager</name>
    <filename>classmbapi_1_1PropertyManager.html</filename>
    <base>ErrorHandler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PropertyManager</name>
      <anchorfile>classmbapi_1_1PropertyManager.html</anchorfile>
      <anchor>a6ca55ec789f75fafd3f6f617e2651c68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ErrorHandler::ReturnCode</type>
      <name>requestPropertyInSnapshots</name>
      <anchorfile>classmbapi_1_1PropertyManager.html</anchorfile>
      <anchor>abc27162bab6fc4d9390ed6f8af9630c6</anchor>
      <arglist>(const std::string &amp;propName, const std::string &amp;outputPropOption=&quot;&quot;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mbapi::SnapshotManager</name>
    <filename>classmbapi_1_1SnapshotManager.html</filename>
    <base>ErrorHandler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SnapshotManager</name>
      <anchorfile>classmbapi_1_1SnapshotManager.html</anchorfile>
      <anchor>a9b4a9163c0556bbbae64d30d4edc06ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>snapshotsNumber</name>
      <anchorfile>classmbapi_1_1SnapshotManager.html</anchorfile>
      <anchor>ac2f337e30dda92a9cea2e2d8222d40a5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>time</name>
      <anchorfile>classmbapi_1_1SnapshotManager.html</anchorfile>
      <anchor>a5dac334c90e1655cfd7a0f284c8029c5</anchor>
      <arglist>(size_t i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isMinor</name>
      <anchorfile>classmbapi_1_1SnapshotManager.html</anchorfile>
      <anchor>a9450d719efbec262eb63d972bb071b8b</anchor>
      <arglist>(size_t i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classmbapi_1_1SnapshotManager.html</anchorfile>
      <anchor>a804e3c138861bf8bccfbd516267fa3c1</anchor>
      <arglist>(size_t i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>fileName</name>
      <anchorfile>classmbapi_1_1SnapshotManager.html</anchorfile>
      <anchor>ae060d29769df8412920038b782141472</anchor>
      <arglist>(size_t i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ErrorHandler::ReturnCode</type>
      <name>requestMajorSnapshot</name>
      <anchorfile>classmbapi_1_1SnapshotManager.html</anchorfile>
      <anchor>a0fac09cedecce1000d957df371fcc4bd</anchor>
      <arglist>(double simTime)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mbapi::SourceRockManager</name>
    <filename>classmbapi_1_1SourceRockManager.html</filename>
    <base>ErrorHandler</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>tocIni</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a3de50b5029bcb2b9d8601a0387b572a1</anchor>
      <arglist>(SourceRockID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>tocInitMapName</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a576dfde1f46c583465b486668964c0e4</anchor>
      <arglist>(SourceRockID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setTOCIni</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a1aaa769f87b73110d49381358e65669a</anchor>
      <arglist>(SourceRockID id, double newTOC)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setTOCInitMapName</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a531d34a49050bfc54c19e7aa3e4629e9</anchor>
      <arglist>(SourceRockID id, const std::string &amp;mapName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hiIni</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a904a5412965b66184b8da2f89585a0fd</anchor>
      <arglist>(SourceRockID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setHIIni</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>aa231e4bee50f8f33063f75bf8d0363aa</anchor>
      <arglist>(SourceRockID id, double newHI)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hcIni</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a0a03317fa69d7f4311898233d28545ea</anchor>
      <arglist>(SourceRockID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setHCIni</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a798730eadbf2feccfd42d54c77af9c4b</anchor>
      <arglist>(SourceRockID id, double newHC)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>preAsphActEnergy</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>aa8fd79a0419219f23affccc5fe182548</anchor>
      <arglist>(SourceRockID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setPreAsphActEnergy</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a187be1067b9dc733d8e3d05fd8ed861d</anchor>
      <arglist>(SourceRockID id, double newVal)=0</arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>SourceRockID</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a8d2ab0560f077a93961ba74bf1eaa9a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; SourceRockID &gt;</type>
      <name>sourceRockIDs</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>aa3c944520a774811db3990f59620b965</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SourceRockID</type>
      <name>findID</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a444c78ff7a5cafc563e131264f21c5a7</anchor>
      <arglist>(const std::string &amp;lName, const std::string &amp;srTypeName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SourceRockID</type>
      <name>createNewSourceRockLithology</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a4c90e46af9128faf83b33d4afe168214</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>layerName</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>a5e557f09534c07bc8d85b7cfc2f04e5b</anchor>
      <arglist>(SourceRockID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>sourceRockType</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>aea3f4885d89a84605ba7b38d8e91321c</anchor>
      <arglist>(SourceRockID id)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~SourceRockManager</name>
      <anchorfile>classmbapi_1_1SourceRockManager.html</anchorfile>
      <anchor>ad17ec0a8dab794cf55c16d864e79fea0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mbapi::StratigraphyManager</name>
    <filename>classmbapi_1_1StratigraphyManager.html</filename>
    <base>ErrorHandler</base>
    <member kind="typedef">
      <type>size_t</type>
      <name>LayerID</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>ad2a046749ccd5f4a56ddb149c0eed79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; LayerID &gt;</type>
      <name>layersIDs</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a4aed414e2acaace9d5c4d475a59dbfe3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; SurfaceID &gt;</type>
      <name>surfacesIDs</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a67bbd5663107775d67c98440d58329f2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LayerID</type>
      <name>createNewLayer</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a47a0b748d9faf5cc2a3802a504c2a623</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SurfaceID</type>
      <name>createNewSurface</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>affbcad4e76926364204e32d15db26769</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>layerName</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>aa2b1b1cfc9e54afe8e56c853b0a060a3</anchor>
      <arglist>(LayerID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LayerID</type>
      <name>layerID</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a57102a3694e4d6860cc62af6df9cde50</anchor>
      <arglist>(const std::string &amp;ln)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>surfaceName</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>ac8f5c4812a9c0ada5e008c8d4a468003</anchor>
      <arglist>(LayerID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>eldestLayerAge</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>ab51d60cb163935f5305f19c91ba57ab7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ErrorHandler::ReturnCode</type>
      <name>layerLithologiesList</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a1b19b2f0373285b8dfd7c909dc9944f0</anchor>
      <arglist>(LayerID id, std::vector&lt; std::string &gt; &amp;lithoList, std::vector&lt; double &gt; &amp;lithoPercent)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ErrorHandler::ReturnCode</type>
      <name>setLayerLithologiesList</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a907c128c45f029e469dc00b2156f5fa0</anchor>
      <arglist>(LayerID id, const std::vector&lt; std::string &gt; &amp;lithoList, const std::vector&lt; double &gt; &amp;lithoPercent)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; LayerID &gt;</type>
      <name>findLayersForLithology</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>ab5b7608a217dea56fc9c8946dcd44d36</anchor>
      <arglist>(const std::string &amp;lithoName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setLayerSurfaces</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a1dcbf2cfdec037015b04f9b7734d992e</anchor>
      <arglist>(LayerID lid, SurfaceID usid, SurfaceID dsid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSourceRockActive</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a20cce168851d86d5d11480766a4f3e8e</anchor>
      <arglist>(LayerID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSourceRockMixingEnabled</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a382d21709da3ef5ca8ad746e69d5aa37</anchor>
      <arglist>(LayerID id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>sourceRockTypeName</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a6d27f70866caa545ead070869befedd3</anchor>
      <arglist>(LayerID lid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>sourceRockMixHI</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a510d2f09696b8ba03dcad37224a6ec32</anchor>
      <arglist>(LayerID lid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>sourceRockMixHC</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a2ff76cb4825f819a07965c3ecb371cf7</anchor>
      <arglist>(LayerID lid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setSourceRockTypeName</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a130e1246681feb11c42dc1b70e4f0eda</anchor>
      <arglist>(LayerID lid, const std::vector&lt; std::string &gt; &amp;srTypeNames)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setSourceRockMixHI</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a57e704016fa6e81b8227fe53d02aa3a9</anchor>
      <arglist>(LayerID lid, double srmHI)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReturnCode</type>
      <name>setSourceRockMixHC</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a1badb903d7c1b6a218a5a3f28ccc8ca1</anchor>
      <arglist>(LayerID lid, double srmHC)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StratigraphyManager</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a3847f0ba8fd80565ea31c0ed0f078428</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~StratigraphyManager</name>
      <anchorfile>classmbapi_1_1StratigraphyManager.html</anchorfile>
      <anchor>a371f742343bb250438c0dd49feb85336</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Cauldron APIs</title>
    <filename>index</filename>
  </compound>
</tagfile>
