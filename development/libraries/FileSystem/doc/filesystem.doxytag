<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>FilePath.h</name>
    <path>V:/TFS/Trunk/development/libraries/FileSystem/src/</path>
    <filename>FilePath_8h</filename>
    <includes id="Path_8h" name="Path.h" local="yes" imported="no">Path.h</includes>
  </compound>
  <compound kind="file">
    <name>FolderPath.h</name>
    <path>V:/TFS/Trunk/development/libraries/FileSystem/src/</path>
    <filename>FolderPath_8h</filename>
    <includes id="Path_8h" name="Path.h" local="yes" imported="no">Path.h</includes>
    <class kind="class">ibs::FolderPath</class>
  </compound>
  <compound kind="file">
    <name>Path.h</name>
    <path>V:/TFS/Trunk/development/libraries/FileSystem/src/</path>
    <filename>Path_8h</filename>
    <class kind="struct">ibs::PathException</class>
    <class kind="class">ibs::Path</class>
  </compound>
  <compound kind="class">
    <name>File</name>
    <filename>classFile.html</filename>
  </compound>
  <compound kind="class">
    <name>ibs::FolderPath</name>
    <filename>classibs_1_1FolderPath.html</filename>
    <base>ibs::Path</base>
    <member kind="function">
      <type></type>
      <name>FolderPath</name>
      <anchorfile>classibs_1_1FolderPath.html</anchorfile>
      <anchor>aaff829c60d4b7d8885438058710affff</anchor>
      <arglist>(const std::string &amp;folderPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FolderPath</name>
      <anchorfile>classibs_1_1FolderPath.html</anchorfile>
      <anchor>a7acd23c3ba05cbd2376256ad1c0b7e8a</anchor>
      <arglist>(const Path &amp;aPath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FolderPath</name>
      <anchorfile>classibs_1_1FolderPath.html</anchorfile>
      <anchor>a2c85d47b376bfb9b6f13ab320c794d7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create</name>
      <anchorfile>classibs_1_1FolderPath.html</anchorfile>
      <anchor>a1b6e1e765386f437b054dcc194bb306c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classibs_1_1FolderPath.html</anchorfile>
      <anchor>a064e4f826b6b1e481cce8ac9132e5747</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classibs_1_1FolderPath.html</anchorfile>
      <anchor>a4e1ad5b107d56afaf8a7fb4cd83b9db5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clean</name>
      <anchorfile>classibs_1_1FolderPath.html</anchorfile>
      <anchor>ad3ffda4b56b420233426d5cf967522ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FolderPath &amp;</type>
      <name>operator=</name>
      <anchorfile>classibs_1_1FolderPath.html</anchorfile>
      <anchor>ab96da29af1acbd0024b55af43dad3b1f</anchor>
      <arglist>(const FolderPath &amp;fld)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ibs::Path</name>
    <filename>classibs_1_1Path.html</filename>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>a1bcea007f2e4e2bd9be8174b4696abcf</anchor>
      <arglist>(const Path &amp;aPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>a026d9ea100af3ddf52e9c732f7ab3c46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>path</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>a24b8af46d71ce28a5e01dcfa18098fca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>cpath</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>af36d67d79880809aa05436fd06547bd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>cutLast</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>afa39edaf0190a2f2f205c69796b9b4d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>a8b8cfa2ddfcaa53c9c302e0c9da24854</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>operator[]</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>acc8f96a3a0bd9b1aeee328a60f756013</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>fullPath</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>a60747e1c2dfd3d78c11ef47ceb085c3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPath</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>aec4d4a718edb0808b9ba88066f650cb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>a5656a6ec4a00c1e107c3fb01faff8d86</anchor>
      <arglist>(const T &amp;pathEl)</arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>operator=</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>ae05c681dfabe4c17addc98b3fe4abbd0</anchor>
      <arglist>(const Path &amp;aPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>applicationFullPath</name>
      <anchorfile>classibs_1_1Path.html</anchorfile>
      <anchor>a2e6454837655990fdc5b3267a8a48f9b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ibs::PathException</name>
    <filename>structibs_1_1PathException.html</filename>
  </compound>
  <compound kind="namespace">
    <name>ibs</name>
    <filename>namespaceibs.html</filename>
    <class kind="class">ibs::FolderPath</class>
    <class kind="class">ibs::Path</class>
    <class kind="struct">ibs::PathException</class>
  </compound>
</tagfile>
