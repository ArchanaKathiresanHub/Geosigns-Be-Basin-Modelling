<!--
***********************************************************************************************
BasinModeling.Linux.props.xml

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.
***********************************************************************************************
-->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--  INFORMATION OF LINUX HOSTS TO BUILD ON -->			
  <PropertyGroup Label="Identification">
    <AgentHost Condition="'$(AgentHost)' == ''">amsd2a-n-b02303</AgentHost>
    <AgentAccount Condition="'$(AgentAccount)' == ''">ksaho3</AgentAccount>
    <AgentKey Condition="'$(AgentKey)' == ''">C:\opt\putty\private_id.ppk</AgentKey>
    <RemoteSourceDir Condition="'$(RemoteSourceDir)' == ''">/scratch/$(AgentAccount)/src</RemoteSourceDir>
    <RemoteBuildDir Condition="'$(RemoteBuildDir)' == ''">/scratch/$(AgentAccount)/build</RemoteBuildDir>

    <!-- Same variables based on alternative credentials -->
    <AgentAccountAlt Condition="'$(AgentAccountAlt)' == ''">s_bpac00</AgentAccountAlt>
    <AgentKeyAlt Condition="'$(AgentKeyAlt)' == ''">C:\opt\putty\s_bpac00.tfs_build_server.ppk</AgentKeyAlt>
    <RemoteSourceDirAlt Condition="'$(RemoteSourceDirAlt)' == ''">/scratch/$(AgentAccountAlt)/src</RemoteSourceDirAlt>
    <RemoteBuildDirAlt Condition="'$(RemoteBuildDirAlt)' == ''">/scratch/$(AgentAccountAlt)/build</RemoteBuildDirAlt>
    
  </PropertyGroup>

  <!-- STANDARD UTILITIES -->
  <PropertyGroup Label="StandardUtilities" >
    <cygwin_bin_dir  Condition="'$(cygwin_bin_dir)' == '' And Exists('C:\cygwin\bin')" >C:\cygwin\bin\</cygwin_bin_dir>
    <cygwin_bin_dir  Condition="'$(cygwin_bin_dir)' == '' And Exists('D:\cygwin\bin')" >D:\cygwin\bin\</cygwin_bin_dir>
    <cygwin_bin_dir  Condition="'$(cygwin_bin_dir)' == '' And Exists('C:\opt\cygwin\bin')" >C:\opt\cygwin\bin\</cygwin_bin_dir>

    <putty_dir Condition="'$(putty_dir)' == '' And Exists('C:\opt\putty')">C:\opt\putty</putty_dir>

    <cpio_exe Condition="'$(cpio_exe)' == ''">"$(cygwin_bin_dir)cpio.exe"</cpio_exe>
	  <tar_exe Condition="'$(tar_exe)' == ''">"$(cygwin_bin_dir)tar.exe"</tar_exe>
    <rsync_exe Condition="'$(rsync_exe)' == ''">"$(cygwin_bin_dir)rsync.exe"</rsync_exe>

    <!-- Command to start non interactive SSH session -->
    <ssh_command>$(putty_dir)\PLINK.exe -batch -ssh -i "$(AgentKey)" $(AgentAccount)@$(AgentHost)</ssh_command>
    <ssh_command_alt>$(putty_dir)\PLINK.exe -batch -ssh -i "$(AgentKeyAlt)" $(AgentAccountAlt)@$(AgentHost)</ssh_command_alt>
    
    <!-- Command to SCP (SSH copy). Note the 'echo y' which is necessary when copying 
         something to a destination host that has not been connected with before. 
         The 'y' answers yes to the question whether or not to trust the new host
     -->
    <scp_command>echo y | $(putty_dir)\PSCP.EXE -i "$(AgentKey)"</scp_command>

    <printenv>cmd /c set</printenv>

  </PropertyGroup>

  <PropertyGroup Label="Locations">
    <solution_root>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)\..\..'))</solution_root>
  </PropertyGroup>

  <!-- JUNIT  -->
  <!-- Import the PublishJUnit Task from Microsoft Team Foundation Build Extensions -->
  <UsingTask Condition=" '$(TeamBuildExtensionsAssemblyFile)' != '' "
             TaskName="Microsoft.TeamFoundation.Build.Extensions.Tasks.PublishJUnit"
             AssemblyFile="$(TeamBuildExtensionsAssemblyFile)" />
			 
  <UsingTask Condition=" '$(TeamBuildExtensionsAssemblyFile)' == '' "
             TaskName="Microsoft.TeamFoundation.Build.Extensions.Tasks.PublishJUnit"
             AssemblyFile="$(TeamBuildExtensionsRefPath)\Microsoft.TeamFoundation.Build.Extensions.Tasks.dll"/>
			 

  <PropertyGroup>
    <!-- Path to the stylesheet used to convert aggregated JUnit results into a Microsoft .trx file -->
    <JUnitTrxConversionStyle Condition=" '$(JUnitTrxConversionStyle)'=='' and  '$(registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Net Framework Setup\NDP\V4\Client@TargetVersion)'=='4.0.0'">$(TeamBuildExtensionsRefPath)\xslt\tpaggregated_2010_trx.xslt</JUnitTrxConversionStyle>
    <JUnitTrxConversionStyle Condition=" '$(JUnitTrxConversionStyle)'=='' ">$(TeamBuildExtensionsRefPath)\xslt\tpaggregated_trx.xslt</JUnitTrxConversionStyle>
	
	<TestResultsRoot>$(BinariesRoot)\TestResults</TestResultsRoot>
  </PropertyGroup>  
  
  <Target Name="PublishJUnitFromLinux">

    <!-- Make a directory to store JUnit results and other temporary files in -->
    <MakeDir Condition="!Exists('$(TestResultsRoot)')" Directories="$(TestResultsRoot)" />
	
	<!-- Copy the JUnit results -->
	<Exec Command="$(scp_command) $(AgentAccountAlt)@$(AgentHost):$(RemoteBuildDirAlt)/*-junit.xml $(TestResultsRoot)"/>

	<ItemGroup>
      <JUnitLogFiles Include="$(TestResultsRoot)\*-junit.xml" />
    </ItemGroup>

	<Warning Condition=" '@(JUnitLogFiles)' == '' " Text="There are no Unit Test results to upload"/>
	
	<!-- Publish the results -->
    <PublishJUnit Condition=" '@(JUnitLogFiles)' != '' "
                  BuildUri="$(BuildUri)"
                  Files="@(JUnitLogFiles)"
                  Flavor="$(Configuration)"
                  Platform="$(Platform)"
                  Style="$(JUnitTrxConversionStyle)"
                  TeamProjectCollectionUrl="$(TfsServerUrl)"
                  TestResultsRoot="$(TestResultsRoot)" />
  </Target>
	
	
  
  <Target Name="DisplayStandardVariables">
    <Message Text="TeamProject=$(TeamProject)"/>
    <Message Text="TeamFoundationServerUrl=$(TeamFoundationServerUrl)"/>
    <Message Text="BuildDefinitionName=$(BuildDefinitionName)"/>
    <Message Text="LinuxBuildRoot=$(LinuxBuildRoot)"/>
    <Message Text="BuildDefinitionID=$(BuildDefinitionID)"/>
    <Message Text="SourcePath=$(SourcePath)"/>
    <Message Text="Configuration=$(Configuration)"/>
    <Message Text="SourceGetVersion=$(SourceGetVersion)"/>
    <Message Text="IncrementalGet=$(IncrementalGet)"/>
    <Message Text="IncrementalBuild=$(IncrementalBuild)"/>
    <Message Text="OutDir=$(OutDir)"/>
    <Message Text="MSBuildProjectDirectory=$(MSBuildProjectDirectory)"/>
    <Message Text="BuildAgent=$(BuildAgent)" />
    <Message Text="Workspace=$(BuildAgent)" />
    <Message Text="BuildDirectory=$(BuildDirectory)" />
    <Message Text="LabelName=$(LabelName)" />
    <Message Text="WorkspaceName=$(WorkspaceName)" />
    <Message Text="SourcesDirectory=$(SourcesDirectory)" />
    <Message Text="BinariesDirectory=$(BinariesDirectory)" />
    <Message Text="TestResultsDirectory=$(TestResultsDirectory)" />
    <Message Text="BuildAgentId=$(BuildAgentId)" />
    <Message Text="BuildDefinitionPath=$(BuildDefinitionPath)" />
    <Message Text="AgentHost = $(AgentHost)" />
    <Message Text="AgentAccount = $(AgentAccount)" />
    <Message Text="AgentKey = $(AgentKey)" />
    <Message Text="AgentAccountAlt = $(AgentAccountAlt)" />
    <Message Text="AgentKeyAlt = $(AgentKeyAlt)" />
    <Message Text="cygwin_bin_dir = $(cygwin_bin_dir)" />
    <Message Text="cpio_exe = $(cpio_exe)" />
    <Message Text="putty_dir = $(putty_dir)"/>
    <Message Text="ssh_command = $(ssh_command)" />
    <Message Text="scp_command = $(scp_command)" />
    <Message Text="solution_root = $(solution_root)" />
  </Target>

  <!-- phony target to maintain backwards compatibility with the mispelled target -->
  <Target Name="DispalyStandardVariables" DependsOnTargets="DisplayStandardVariables" />  
  
  <Target Name="PrintEnv">
    <Exec Command="$(printenv)" />
  </Target>
</Project>