# gocbm - script for defining the development environment for Cauldron CBM
#
# To use: Call once from your development directory 
#
# Syntax:	source /nfs/rvl/users/ibs/bin/gocbm [32|64]
# 
# 	[32|64] - optional override for number of bits of target platform
#
# Variables created or modified:
#  PATH			- Compensated so correct development tools are selected
#  MAKE			- Changed where necessary
#  CC	                - for Sun platform
#  CXX                  - for Sun platform
#  IBS_HOME		- Base location of IBS 
#  IBS_BIN		- The location of the IBS binary directory
#  IBS_3RDPARTY		- The location of the IBS 3rd party tools
#  CSCE_ARCH		- Hardware platform as defined by the getos2 command
#  LOCAL		- Local env. var as required by socom
#  machine		- Hardware platform as required by socom
#  USE64BITS		- Set TRUE when machine is 64-bits
#  PETSC_ARCH		- Hardware platform as expected by PETSc libraries
#  MPI_BIN		- Default MPI bin directory (set to OPTIMIZED)
#  MPI_OBIN		- Optimized MPI executables
#  MPI_DBIN		- Debug MPI executables
#  P4_RSHCOMMAND	- definitions required for MPICH connection
# Notes:
#  PETSc defined as 64-bit because we don't have or use a 32-bit PETSc
#
###############################################################################

echo "Setting up Cauldron CBM Development Environment"
echo "Turning off any previious definition of machine."
unset machine

###############################################################################
#
# general setup
#
setenv IBS_HOME /nfs/rvl/users/ibs
setenv IBS_BIN ${IBS_HOME}/bin
setenv IBS_3RDPARTY ${IBS_HOME}/IBS/EXTERNALS

# define the name of the maintainer of this environment
setenv CBM_MAINTAINER Gregory.Lackore@shell.com

# define root directory of CBM development
setenv CBM_HOME /nfs/rvl/groups/ept-sg/SWEast/Cauldron

# remove flags used by other scripts
unsetenv MAKEFLAGS

# define the alpha release base directory
setenv ALPHA_BASE ${CBM_HOME}/alpha

# define home location of the source code repository
setenv REPOSITORY_HOME ${CBM_HOME}/Repository

# define home location of Nightly build
setenv NIGHTLY_HOME       ${CBM_HOME}/NightlyBuilds
setenv NIGHTLY_SCRIPTS    $REPOSITORY_HOME/trunk/scripts


###############################################################################
#
# parse parameters
#
setenv TARGET_BITS $1

###############################################################################
#
# setup based on machines architecture specified by Shell CSCE
#
setenv CSCE_ARCH `/apps/sss/share/getos2 --os --arch`
echo "  Native platform is $CSCE_ARCH"

switch ($CSCE_ARCH)
# Linux 32-bit
case LinuxRHEL_i686:
	echo "  Detected Linux 32-bit environment"
	setenv NATIVE_BITS 32
	if ( $TARGET_BITS == 64 ) then
		echo "    Override target to 64-bit environment"
		echo "!!! Error, this will not work! Exitting"
		exit 1
	endif
	setenv TARGET_BITS 32
        setenv machine Linux32

	# there are no MPI tools defined for this platform

	# Path to get MPICH executable and correct compiler version
	setenv PATH ${MPI_BIN}:/usr/bin:${IBS_HOME}/bin:/usr/afsws/bin:${PATH}
	setenv MAKE /apps/oss/bin/make
        breaksw

# Linux 64-bit
case LinuxRHEL64_x86_64:
	echo "  Detected Linux 64-bit environment"
	setenv NATIVE_BITS 64
	if ( $TARGET_BITS == 32 ) then
		echo "    Override target to 32-bit environment"
	        setenv machine Linux32
	else
	        setenv machine Linux64
		setenv TARGET_BITS 64
	endif
	# define location of MPICH executables for this platform
	setenv MPICH_HOME ${IBS_3RDPARTY}/MPICH/curr/${CSCE_ARCH}
	setenv MPI_OBIN ${MPICH_HOME}/OPTIMIZED/bin
	setenv MPI_DBIN ${MPICH_HOME}/DEBUG/bin
	setenv MPI_BIN ${MPI_OBIN}
	setenv P4_RSHCOMMAND ssh

	# Path to get MPICH executable and correct compiler version
	setenv PATH ${MPI_BIN}:/usr/bin:${IBS_HOME}/bin:/usr/afsws/bin:${PATH}
	setenv MAKE /apps/oss/bin/make
        breaksw

# Irix 32-bit
case IRIX_IP32:
	echo "  Detected Irix 32-bit environment"
	setenv NATIVE_BITS 32
	if ( $TARGET_BITS == 64 ) then
		echo "    Override target to 64-bit environment"
		echo "!!! Error, this will not work! Exitting"
		exit 1
	endif
	setenv TARGET_BITS 32
        setenv machine Silicon32

	# define location of MPI executables for this platform
	setenv MPI_BIN /usr/bin

	# Set pat to find the correct make executable
	setenv PATH /apps/oss/bin:${PATH}
        breaksw

# Irix 64-bit
case IRIX64_IP27:
case IRIX64_IP30:
	echo "  Detected Irix 64-bit environment"
	setenv NATIVE_BITS 64
	if ( $TARGET_BITS == 32 ) then
		echo "    Override target to 32-bit environment"
	        setenv machine Silicon32
	else
	        setenv machine Silicon64
		setenv TARGET_BITS 64
	endif

	# define location of MPI executables for this platform
	setenv MPI_BIN /usr/bin

	# Set pat to find the correct make executable
	setenv PATH /apps/oss/bin:${PATH}
        breaksw

# Solaris 32-bit
case SunOS_sun4u:
	echo "  Detected Solaris 32-bit environment"
	setenv NATIVE_BITS 32
	if ( $TARGET_BITS == 64 ) then
		echo "    Override target to 64-bit environment"
		echo "!!! Error, this will not work! Exitting"
		exit 1
	endif
	setenv TARGET_BITS 32
        setenv machine Sun

	# define location of MPI executables for this platform
	setenv MPI_BIN /opt/SUNWhpc/bin

	# set PATH to find the right make and compiler
	setenv PATH /apps/oss/bin:${PATH}:/opt/SUNWhpc/bin:/usr/ccs/bin

	# define location of compiler
	setenv CC  '/opt/SUNWspro/bin/cc'
	setenv CXX '/opt/SUNWspro/bin/CC'
        breaksw

# Solaris 64-bit
case SunOS64_sun4u:
	echo "  Detected Solaris 64-bit environment"
	setenv NATIVE_BITS 64
	if ( $TARGET_BITS == 32 ) then
		echo "    Override target to 32-bit environment"
	        setenv machine Sun
	else
		setenv TARGET_BITS 64
	        setenv machine SunOS64
	endif

	# define location of MPI executables for this platform
	setenv MPI_BIN /opt/SUNWhpc/bin

	# set PATH to find the right make and compiler
	setenv PATH /apps/oss/bin:${PATH}:/opt/SUNWhpc/bin:/usr/ccs/bin

	# define location of workshop compiler
	setenv CC  '/opt/SUNWspro/bin/cc'
	setenv CXX '/opt/SUNWspro/bin/CC'
        breaksw

default:
        echo "!!Error: Operating System not recognized."
        echo "  Aborting setup..."
        exit 1
        breaksw
endsw

###############################################################################
#
# setup based on target machine
#
# Define the home directory of the 3rd party libraries
#
setenv HDF5_SHOME       ${IBS_3RDPARTY}/HDF5/curr/${CSCE_ARCH}/SERIAL/${TARGET_BITS}
setenv HDF5_PHOME       ${IBS_3RDPARTY}/HDF5/curr/${CSCE_ARCH}/PARALLEL/${TARGET_BITS}
setenv QT_HOME          ${IBS_3RDPARTY}/QT/curr/${CSCE_ARCH}/${TARGET_BITS}
setenv QWT_HOME         ${IBS_3RDPARTY}/QWT/curr/${CSCE_ARCH}/${TARGET_BITS}
setenv PVTPACK_HOME     ${IBS_3RDPARTY}/PVTPACK/curr/${CSCE_ARCH}/${TARGET_BITS}
setenv EOSPACK_HOME     ${IBS_3RDPARTY}/EOSPACK/curr/${CSCE_ARCH}/${TARGET_BITS}
setenv GENEX5_HOME      ${IBS_3RDPARTY}/GENEX5/curr/${CSCE_ARCH}/${TARGET_BITS}
setenv CBMGENERICS_HOME ${IBS_3RDPARTY}/CBMGENERICS/curr/${CSCE_ARCH}/${TARGET_BITS}
setenv PETSC_HOME       ${IBS_3RDPARTY}/PETSC/2.1.6/${CSCE_ARCH}
setenv BPA_HOME         ${IBS_3RDPARTY}/BPA/curr/${CSCE_ARCH}/${TARGET_BITS}/OPTIMIZED

# Define make and directories for QT
setenv QTDIR  ${QT_HOME}/OPTIMIZED
setenv QWTDIR ${QWT_HOME}/OPTIMIZED
setenv QMAKE  ${QTDIR}/bin/qmake



# define the default mail program to use
setenv MAIL mailx
# 
switch ($machine)

case Linux32:
	echo "  Setting Linux 32-bit target environment"
	unsetenv USE64BITS
        setenv PETSC_ARCH linux64
	setenv MAIL mail
        breaksw

case Linux64:
	echo "  Setting Linux 64-bit target environment"
	setenv USE64BITS TRUE
	setenv PETSC_ARCH linux64

	# define base location of MPICH libraries, only in native mode
	setenv MPICH_HOME ${IBS_3RDPARTY}/MPICH/curr/${CSCE_ARCH}
	setenv MAIL mail

	# Greg: need library path to run Qt utilities like uic and moc
	setenv LD_LIBRARY_PATH ${QTDIR}/lib/shared
        breaksw

case Silicon32:
	echo "  Setting Irix 32-bit target environment"
	unsetenv USE64BITS
        setenv PETSC_ARCH IRIX64
        breaksw

case Silicon64:
	echo "  Setting Irix 64-bit target environment"
	setenv USE64BITS TRUE
        setenv PETSC_ARCH IRIX64
        breaksw

# Solaris 32-bit
case Sun:
	echo "  Setting Solaris 32-bit target environment"
	unsetenv USE64BITS
        setenv PETSC_ARCH solaris64
        setenv QMAKESPEC $QTDIR/mkspecs/solaris-cc

	# set compiler and basic options
	# do not use the pic13 option as it causes alot of problems building executables
#        setenv CC "${CC} -xcode=pic13"
        setenv CC "${CC}"
	setenv CFLAGS "-I/opt/SUNWhpc/include"
	setenv CPPFLAGS "-I/opt/SUNWhpc/include"

	# define libraries for tools
	setenv LD_LIBRARY_PATH "/usr/lib:/opt/SUNWhpc/lib:/usr/ucblib:${PETSC_HOME}/OPTIMIZED/lib/libO_c++/solaris"
        breaksw

# Solaris 64-bit
case SunOS64:
	echo "  Setting Solaris 64-bit target environment"
	setenv USE64BITS TRUE
        setenv PETSC_ARCH solaris64
        setenv QMAKESPEC $QTDIR/mkspecs/solaris-cc

	# set compiler and basic options
	setenv CC "${CC} -xarch=v9 -xcode=pic32"
	setenv CFLAGS "-I/opt/SUNWhpc/include/v9"
	setenv CPPFLAGS "-I/opt/SUNWhpc/include/v9"

	# define libraries for tools
	setenv LD_LIBRARY_PATH_64 "/usr/lib/64:/opt/SUNWhpc/lib/sparcv9:/usr/ucblib/sparcv9:${PETSC_HOME}/OPTIMIZED/lib/libO_c++/solaris64"
        breaksw
default:
        echo "!!Error: machine name is invalid [$machine]."
        echo "  Aborting setup..."
        exit 1
        breaksw
endsw

#
# define local environment
#
setenv LOCAL `pwd`
#setenv TMPDIR $LOCAL 

# prepend QT library to defined library paths
if ( ${?LD_LIBRARY_PATH} ) then
	setenv LD_LIBRARY_PATH ${QTDIR}/lib:${LD_LIBRARY_PATH}
endif
if ( ${?LD_LIBRARY64_PATH} ) then
	setenv LD_LIBRARY64_PATH ${QTDIR}/lib:${LD_LIBRARY64_PATH}
endif
if ( ${?LD_LIBRARYN32_PATH} ) then
	setenv LD_LIBRARYN32_PATH ${QTDIR}/lib:${LD_LIBRARYN32_PATH}
endif
if ( ${?LD_LIBRARY_PATH_64} ) then
	setenv LD_LIBRARY_PATH_64 ${QTDIR}/lib:${LD_LIBRARY_PATH_64}
endif

###############################################################################
#
# setup IBS tools
#
source $IBS_BIN/goibs_develop_startup.login
source $IBS_BIN/goibs_socoms_startup.login

#
# get the tools
source $IBS_BIN/goibs_startup.login
#source $IBS_BIN/goibs_geocase.login

###############################################################################
#
# Add definitions for the Alpha release environment
#
setenv ALPHA_BASE ${CBM_HOME}/alpha
setenv ALPHA_BIN $ALPHA_BASE/bin/$CSCE_ARCH

###############################################################################
#
# Add definitions needed for Subversion version control
#
# prepend subvserion directory before path
#
setenv PATH ${CBM_HOME}/bin/`/apps/sss/share/getos2`:${QTDIR}/bin:${IBS_3RDPARTY}/SUBVERSION/curr/${CSCE_ARCH}/bin:${PATH}
setenv SVN_ARCHIVE svn://rijkes-n-d99610

###############################################################################
#
# Set definitions necessary for licenses
source ${IBS_BIN}/golicense
# 
#  run time development environ for EOSPACK and GENEX5
#
setenv EOSPACKDIR $IBS_NAMES/eospack
setenv GENEX5DIR  $IBS_NAMES/genex50

# end
