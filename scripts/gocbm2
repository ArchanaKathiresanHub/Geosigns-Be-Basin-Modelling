# gocbm - script for defining the development environment for Cauldron CBM
#
# To use: Call once from your development directory 
#
# Syntax:	source /nfs/rvl/users/ibs/bin/gocbm [32|64]
#
# 	[32|64] - optional override for number of bits of target platform
# 
# Variables created or modified:
#  PATH			- Compensated so correct development tools are selected
#  MAKE			- Changed where necessary
#  IBS_HOME		- Base location of IBS 
#  IBS_BIN		- The location of the IBS binary directory
#  IBS_3RDPARTY		- The location of the IBS 3rd party tools
#  CSCE_ARCH		- Hardware platform as defined by the getos2 command
#  LM_LICENSE_FILE	- Location of license file required for any development tools
#  LOCAL		- Local env. var as required by socom
#  machine		- Hardware platform as required by socom
#  USE64BITS		- Set TRUE when machine is 64-bits
#  PETSC_ARCH		- Hardware platform as expected by PETSc libraries
#  MPI_BIN		- Default MPI bin directory
#  MPI_OBIN		- Optimized MPI executables
#  MPI_DBIN		- Debug MPI executables

echo "Setting up Cauldron CBM Development Environment"

setenv bits_override $1
switch ( "$bits_override" )

case 32:
	echo "    Overriding for a 32-bit platform"
	breaksw

case 64:
	echo "    Overriding for a 64-bit platform"
	breaksw

default:
	echo "    Setup for native mode platform"
	setenv bits_override ""
	breaksw

endsw


###############################################################################
#
# general setup
#
setenv IBS_HOME /nfs/rvl/users/ibs
setenv IBS_BIN ${IBS_HOME}/bin
setenv IBS_3RDPARTY ${IBS_HOME}/IBS/EXTERNALS

#
# Architecture specified by Shell CSCE
setenv CSCE_ARCH `/apps/sss/share/getos2 --os --arch`
echo "  Native platform is $CSCE_ARCH"
#
# setup IBS tools
source $IBS_BIN/goibs_develop_startup.login
source $IBS_BIN/goibs_socoms_startup.login

unsetenv MAKEFLAGS
setenv LOCAL `pwd`
#setenv TMPDIR $LOCAL 

#
# get the tools
source $IBS_BIN/goibs_startup.login
#source $IBS_BIN/goibs_geocase.login

#
# Machine specific references including those used for MPI, HDF5 and PETSc
switch ($CSCE_ARCH)

# Linux 32-bit, not tested
case LinuxRHEL_i686:
	echo "  Detected Linux 32-bit environment"
	setenv PATH /usr/bin:${IBS_HOME}/bin:/usr/afsws/bin:${PATH}
	setenv MAKE /apps/oss/bin/make

	if ( $bits_override == 64 ) then
		echo "    Override detected for Linux64 environment"
	        setenv machine Linux64
		setenv USE64BITS TRUE
       		setenv PETSC_ARCH linux64
		setenv CSCE_ARCH LinuxRHEL64_x86_64
	else
	        setenv machine Linux32
		unsetenv USE64BITS 
       		setenv PETSC_ARCH linux
	endif
	#   Optimized, Debug and default names in that order
	setenv MPI_OBIN ${IBS_3RDPARTY}/MPICH/curr/${CSCE_ARCH}/OPTIMIZED/bin
	setenv MPI_DBIN ${IBS_3RDPARTY}/MPICH/curr/${CSCE_ARCH}/DEBUG/bin
	setenv MPI_BIN ${MPI_OBIN}
	#   prepend MPICH for mpirun command
	setenv PATH ${MPI_BIN}:${PATH}
        breaksw

# Linux 64-bit
case LinuxRHEL64_x86_64:
	echo "  Detected Linux 64-bit environment"
	#
	# Definitions required to execute MPI commands 
	#    Path necessary to get the correct compiler version (not the one in /apps/oss)
	setenv PATH /usr/bin:${IBS_HOME}/bin:/usr/afsws/bin:${PATH}
	setenv MAKE /apps/oss/bin/make

	if ( $bits_override == 32 ) then
		echo "  Override detected for Linux32 environment"
	        setenv machine Linux32
		unsetenv USE64BITS
        	setenv PETSC_ARCH linux
		setenv CSCE_ARCH LinuxRHEL_i686
	else
	        setenv machine Linux64
		setenv USE64BITS TRUE
        	setenv PETSC_ARCH linux64
	endif
	#   Optimized, Debug and default names in that order
	setenv MPI_OBIN ${IBS_3RDPARTY}/MPICH/curr/${CSCE_ARCH}/OPTIMIZED/bin
	setenv MPI_DBIN ${IBS_3RDPARTY}/MPICH/curr/${CSCE_ARCH}/DEBUG/bin
	setenv MPI_BIN ${MPI_OBIN}
	#   prepend MPICH for mpirun command
	setenv PATH ${MPI_BIN}:${PATH}
        breaksw

# Irix 32-bit	Not tested
case IRIX_IP32:
	echo "  Detected Irix 32-bit environment"
	#    Path necessary to get the correct compiler version
	setenv PATH /apps/oss/bin:${PATH}
	# License file required by compiler
	setenv LM_LICENSE_FILE /var/flexlm/license.dat:${LM_LICENSE_FILE}

	if ( $bits_override == 64 ) then
		echo "    Override detected for IRIX64 environment"
	        setenv machine Silicon64
		setenv USE64BITS TRUE
        	setenv PETSC_ARCH IRIX64
		setenv CSCE_ARCH IRIX64_IP27
	else
	        setenv machine Silicon32
		unsetenv USE64BITS 
        	setenv PETSC_ARCH IRIX
	endif
        breaksw

# Irix 64-bit
case IRIX64_IP27:
	echo "  Detected Irix 64-bit environment"
	#    Path necessary to get the correct compiler version
	setenv PATH /apps/oss/bin:${PATH}
	# License file required by compiler
	setenv LM_LICENSE_FILE /var/flexlm/license.dat:${LM_LICENSE_FILE}

	if ( $bits_override == 32 ) then
		echo "    Override detected for IRIX environment"
	        setenv machine Silicon32
		unsetenv USE64BITS
        	setenv PETSC_ARCH IRIX
		setenv CSCE_ARCH IRIX_IP32
	else
	        setenv machine Silicon64
		setenv USE64BITS TRUE
        	setenv PETSC_ARCH IRIX64
	endif
        breaksw

# Solaris 32-bit 	Not tested
case SunOS_sun4u:
	echo "  Detected Solaris 32-bit environment"
	#    Path necessary to get the correct compiler version
	setenv PATH /apps/oss/bin:${PATH}
	# License file required by development environment
	setenv LM_LICENSE_FILE /apps/3rdparty/oiv/3.1.1/SunOS64_58/license/license01.dat:/apps/3rdparty/oiv/3.1.1/SunOS64_58/license/license.dat:/apps/3rdparty/workshop/6.1/SunOS64_58/license/license.dat:/apps/3rdparty/uniras/6v4a/SunOS64_58/license/license.dat:/apps/3rdparty/uniras/6v4a/SunOS64_58/license/license1.dat:/apps/3rdparty/uniras/6v5a/SunOS64_58/license/license.dat

	if ( $bits_override == 64 ) then
		echo "    Override detected for SunOS64 environment"
	        setenv machine SunOS64
		setenv USE64BITS TRUE
        	setenv PETSC_ARCH solaris64
		setenv CSCE_ARCH SunOS64_sun4u
		#    compiler options
		setenv CC '/apps/3rdparty/workshop/6.1/SunOS64_58/bin/cc -xarch=v9'
		setenv CPPFLAGS "-I/opt/SUNWhpc/include/v9"
		setenv LD_LIBRARY_PATH_64 "/usr/lib/64:/opt/SUNWhpc/lib/sparcv9:/usr/ucblib/sparcv9:${IBS_3RDPARTY}/PETSc/curr/OPTIMIZED/lib/libO_c++/solaris64"
	else
	        setenv machine Sun
		unsetenv USE64BITS 
        	setenv PETSC_ARCH solaris
		#    compiler options
		setenv CC '/apps/3rdparty/workshop/6.1/SunOS64_58/bin/cc'
		setenv CPPFLAGS "-I/opt/SUNWhpc/include"
		setenv LD_LIBRARY_PATH "/usr/lib:/opt/SUNWhpc/lib:/usr/ucblib:${IBS_3RDPARTY}/PETSc/curr/OPTIMIZED/lib/libO_c++/solaris64"
	endif
	#    path to the mpirun command
	setenv PATH ${PATH}:/opt/SUNWhpc/bin
        breaksw

# Solaris 64-bit
case SunOS64_sun4u:
	echo "  Detected Solaris 64-bit environment"
	#    Path necessary to get the correct compiler version
	setenv PATH /apps/oss/bin:${PATH}
	# License file required by development environment
	setenv LM_LICENSE_FILE /apps/3rdparty/oiv/3.1.1/SunOS64_58/license/license01.dat:/apps/3rdparty/oiv/3.1.1/SunOS64_58/license/license.dat:/apps/3rdparty/workshop/6.1/SunOS64_58/license/license.dat:/apps/3rdparty/uniras/6v4a/SunOS64_58/license/license.dat:/apps/3rdparty/uniras/6v4a/SunOS64_58/license/license1.dat:/apps/3rdparty/uniras/6v5a/SunOS64_58/license/license.dat

	if ( $bits_override == 32 ) then
		echo "    Override detected for Sun environment"
	        setenv machine Sun
		unsetenv USE64BITS
        	setenv PETSC_ARCH solaris
		setenv CSCE_ARCH SunOS_sun4u
		#    compiler options
		setenv CC '/apps/3rdparty/workshop/6.1/SunOS64_58/bin/cc'
		setenv CPPFLAGS "-I/opt/SUNWhpc/include"
		setenv LD_LIBRARY_PATH "/usr/lib:/opt/SUNWhpc/lib:/usr/ucblib:${IBS_3RDPARTY}/PETSc/curr/OPTIMIZED/lib/libO_c++/solaris64"
	else
	        setenv machine SunOS64
		setenv USE64BITS TRUE
        	setenv PETSC_ARCH solaris64
		#    compiler options
		setenv CC '/apps/3rdparty/workshop/6.1/SunOS64_58/bin/cc -xarch=v9'
		setenv CPPFLAGS "-I/opt/SUNWhpc/include/v9"
		setenv LD_LIBRARY_PATH_64 "/usr/lib/64:/opt/SUNWhpc/lib/sparcv9:/usr/ucblib/sparcv9:${IBS_3RDPARTY}/PETSc/curr/OPTIMIZED/lib/libO_c++/solaris64"
	endif
	#    path to the mpirun command
	setenv PATH ${PATH}:/opt/SUNWhpc/bin
        breaksw

default:
        echo "!!Error: Operating System not recognized"
        echo "  Aborting setup..."
        exit 1
        breaksw
endsw

# Add location of subversion tools to PATH
setenv PATH ${PATH}:${IBS_3RDPARTY}/SUBVERSION/curr/${CSCE_ARCH}/bin

# end
