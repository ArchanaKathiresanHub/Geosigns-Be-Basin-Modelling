#!/bin/bash
##############################################################################
# run cauldron_test compiled with -DFT_DEBUG on cauldron project and prepare
# input for unit test 
# example: ./prepareUnitTestInput calibration
#################################
#create input file for unit test
################################
#
#output samples
SAMPLES=(`grep SampleId ${1}OldCode.out | cut -d " " -f 2`)
ZETAS=(`grep SampleId ${1}OldCode.out | cut -d " " -f 4`)
USTDGLASSTRACKDENSITY=(`grep SampleId ${1}OldCode.out | cut -d " " -f 6`)
N_SAMPLES=`grep SampleId ${1}OldCode.out | wc -l`
echo "nSamples" ${N_SAMPLES}
for (( i=0; i<$((N_SAMPLES)); ++i ))
  do 
  N_GRAINS=`grep "GrainOfSample ${SAMPLES[$((i))]}" ${1}OldCode.out | wc -l`
  echo "SampleId" ${SAMPLES[$((i))]} "nGrains" ${N_GRAINS} "zeta" ${ZETAS[$((i))]} \
        "UStdGlassTrackDensity" ${USTDGLASSTRACKDENSITY[$((i))]}
  GRAINS=(`grep "GrainOfSample ${SAMPLES[$((i))]}" ${1}OldCode.out | cut  -d " " -f 2`)
  NSPONT=(`grep "GrainOfSample ${SAMPLES[$((i))]}" ${1}OldCode.out | cut  -d " " -f 6`)
  NIND=(`grep "GrainOfSample ${SAMPLES[$((i))]}" ${1}OldCode.out | cut  -d " " -f 8`)
  CLPERC=(`grep "GrainOfSample ${SAMPLES[$((i))]}" ${1}OldCode.out | cut  -d " " -f 10`)
  for (( j=0; j<$((N_GRAINS)); ++j ))
    do 
    N_LENGTHS=`grep "LengthFromSample ${SAMPLES[$((i))]} LengthFromGrain ${GRAINS[$((j))]} " ${1}OldCode.out | wc -l`
    echo "GrainId ${GRAINS[$((j))]} GrainOfSample ${SAMPLES[$((i))]} nLengths ${N_LENGTHS} nSpontTracks ${NSPONT[$((j))]} nInducedTracks ${NIND[$((j))]} ClWeightPerc ${CLPERC[$((j))]}"    
    for (( k=0; k<$((N_LENGTHS)); ++k ))
      do 
      LENGTHS=(`grep "LengthFromSample ${SAMPLES[$((i))]} LengthFromGrain ${GRAINS[$((j))]} " ${1}OldCode.out | cut  -d " " -f 6`)
      echo "LengthFromSample ${SAMPLES[$((i))]} LengthFromGrain ${GRAINS[$((j))]} Length ${LENGTHS[$((k))]}"    
    done
  done
#  grep "GrainOfSample ${SAMPLES[$(($i))]}" ${1}OldCode.out
done 
for (( i=0; i<$((N_SAMPLES)); ++i ))
  do 
  N_TIMESTEPS=`grep "timeAndTempOfSample ${SAMPLES[$((i))]}$" ${1}OldCode.out | wc -l`
  echo "nTimesteps ${N_TIMESTEPS} timeStepsOfSample ${SAMPLES[$((i))]}"
  grep "timeAndTempOfSample ${SAMPLES[$((i))]}" ${1}OldCode.out
done 

#awk 'BEGIN{FOUND=0}{if($1=="predicted") FOUND=1; if (FOUND==1) print $0}' ${1}OldCode.out > ${1}ResultOld.txt

#grep timestep ${1}TestOld.out | grep $2 | cut -d " " -f 2,4 > fttest2.in
#./testFissionTracks_test > ${1}ResultNew.txt
